(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[463],{3905:function(t,e,a){"use strict";a.d(e,{Zo:function(){return u},kt:function(){return g}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),d=s(a),g=r,k=d["".concat(p,".").concat(g)]||d[g]||m[g]||l;return a?n.createElement(k,i(i({ref:e},u),{},{components:a})):n.createElement(k,i({ref:e},u))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4700:function(t,e,a){"use strict";a.r(e),a.d(e,{frontMatter:function(){return o},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var n=a(2122),r=a(9756),l=(a(7294),a(3905)),i=["components"],o={sidebar_position:3},p={unversionedId:"getting-started/production-setup",id:"getting-started/production-setup",isDocsHomePage:!1,title:"Production Setup",description:"Running your own Tellery with Kubernetes",source:"@site/docs/getting-started/production-setup.md",sourceDirName:"getting-started",slug:"/getting-started/production-setup",permalink:"/docs/getting-started/production-setup",editUrl:"https://github.com/tellery/website/edit/master/docs/getting-started/production-setup.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Quick Setup",permalink:"/docs/getting-started/quick-setup"},next:{title:"Connector Deployment",permalink:"/docs/getting-started/connector-deployment"}},s=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Infrastructure",id:"infrastructure",children:[]},{value:"Installing the Chart",id:"installing-the-chart",children:[{value:"Installing with external Postgresql",id:"installing-with-external-postgresql",children:[]}]},{value:"Uninstall the Chart",id:"uninstall-the-chart",children:[]},{value:"Notes",id:"notes",children:[]},{value:"Configuration",id:"configuration",children:[{value:"Postgresql Configuration",id:"postgresql-configuration",children:[]},{value:"Object Storage Configuration",id:"object-storage-configuration",children:[]},{value:"Redis Configuration",id:"redis-configuration",children:[]},{value:"Email Server Configuration",id:"email-server-configuration",children:[]},{value:"System Configuration",id:"system-configuration",children:[]},{value:"Initialization Configuration",id:"initialization-configuration",children:[]},{value:"Basic Configuration",id:"basic-configuration",children:[]},{value:"Server Configuration",id:"server-configuration",children:[]},{value:"Connector Configuration",id:"connector-configuration",children:[]}]}],u={toc:s};function m(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Running your own Tellery with Kubernetes"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://artifacthub.io/packages/search?repo=tellery"},(0,l.kt)("img",{parentName:"a",src:"https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/tellery",alt:"Artifact Hub"}))),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.helm.sh/docs/intro/install/"},"Helm")," 3.0+"),(0,l.kt)("li",{parentName:"ul"},"Kubernetes 1.10+")),(0,l.kt)("h2",{id:"infrastructure"},"Infrastructure"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"(Required)")," Postgresql 10.0+"),(0,l.kt)("li",{parentName:"ul"},"(Optional) Redis 5.0+"),(0,l.kt)("li",{parentName:"ul"},"(Optional) Object Storage Service ( ",(0,l.kt)("inlineCode",{parentName:"li"},"AWS S3"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Aliyun OSS")," or others compatible with ",(0,l.kt)("inlineCode",{parentName:"li"},"S3")," protocol)"),(0,l.kt)("li",{parentName:"ul"},"For notifications, you would need",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Email: An email address and an email server")))),(0,l.kt)("h2",{id:"installing-the-chart"},"Installing the Chart"),(0,l.kt)("p",null,"First of all, add the repo"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add tellery-stable https://tellery.github.io/charts\nhelm repo update\n")),(0,l.kt)("p",null,"To install the helm chart with release name e.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"tellery")," (replace this by your need, the following commands will all use the name ",(0,l.kt)("inlineCode",{parentName:"p"},"tellery"),"):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm install tellery tellery-stable/tellery \\\n--set system.web.host=YOUR_HOST \\\n--set postgresql.enabled=true\n")),(0,l.kt)("p",null,"If you want to provide advanced parameters with your installation you can check the full ",(0,l.kt)("a",{parentName:"p",href:"#configuration"},"Configuration"),"."),(0,l.kt)("h3",{id:"installing-with-external-postgresql"},"Installing with external Postgresql"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm install tellery tellery-stable/tellery \\\n--set system.web.host=YOUR_HOST \\\n--set externalPostgresql.host=postgresqlAddress \\\n--set externalPostgresql.port=5432 \\\n--set externalPostgresql.username=postgres \\\n--set externalPostgresql.password=password \\\n--set externalPostgresql.database=tellery\n")),(0,l.kt)("h2",{id:"uninstall-the-chart"},"Uninstall the Chart"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm uninstall tellery\n")),(0,l.kt)("h2",{id:"notes"},"Notes"),(0,l.kt)("p",null,"So far the connector can be only deployed with single replica."),(0,l.kt)("p",null,"For tellery main service, if you wanna go with multiple replicas, you have to configure a redis storage for the state synchronization.\nTo Configure the redis storage, see ",(0,l.kt)("a",{parentName:"p",href:"#redis-configuration"},"Redis Configuration"),"."),(0,l.kt)("p",null,"The only mandatory config that have to be given by user is ",(0,l.kt)("inlineCode",{parentName:"p"},"system.web.host"),", see ",(0,l.kt)("a",{parentName:"p",href:"#system-configuration"},"System Configuration")," for more details."),(0,l.kt)("h2",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"The following table lists the configurable parameters of the Tellery chart and their default values."),(0,l.kt)("h3",{id:"postgresql-configuration"},"Postgresql Configuration"),(0,l.kt)("p",null,"You can choose ",(0,l.kt)("inlineCode",{parentName:"p"},"PostgreSQL deployed by Helm")," by ",(0,l.kt)("inlineCode",{parentName:"p"},"--set postgresql.enabled=true")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"External PostgreSQL")," by ",(0,l.kt)("inlineCode",{parentName:"p"},"--set externalPostgresql.host=xxx"),", if both are configured, ",(0,l.kt)("inlineCode",{parentName:"p"},"PostgreSQL deployed by Helm")," will be used."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"PostgreSQL deployed by Helm")," is base on ",(0,l.kt)("a",{parentName:"p",href:"https://artifacthub.io/packages/helm/bitnami/postgresql/10.4.8#parameters"},"Postgresql Helm Chart"),", you can see it for more configurations."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"postgresql.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable postgresql deployed by helm"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalPostgresql.host"),(0,l.kt)("td",{parentName:"tr",align:null},"External postgresql host"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalPostgresql.port"),(0,l.kt)("td",{parentName:"tr",align:null},"External postgresql port"),(0,l.kt)("td",{parentName:"tr",align:null},"5432")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalPostgresql.database"),(0,l.kt)("td",{parentName:"tr",align:null},"External postgresql Database name"),(0,l.kt)("td",{parentName:"tr",align:null},"tellery")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalPostgresql.username"),(0,l.kt)("td",{parentName:"tr",align:null},"External postgresql username"),(0,l.kt)("td",{parentName:"tr",align:null},"postgres")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalPostgresql.password"),(0,l.kt)("td",{parentName:"tr",align:null},"External postgresql password"),(0,l.kt)("td",{parentName:"tr",align:null},"null")))),(0,l.kt)("h3",{id:"object-storage-configuration"},"Object Storage Configuration"),(0,l.kt)("p",null,"If you use PG as object storage, you only need to set ",(0,l.kt)("inlineCode",{parentName:"p"},"objectStorage.type=postgres"),"."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"objectStorage.endpoint")," is optional when you are using ",(0,l.kt)("inlineCode",{parentName:"p"},"AWS S3"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"objectStorage.type"),(0,l.kt)("td",{parentName:"tr",align:null},"Object storage type"),(0,l.kt)("td",{parentName:"tr",align:null},"postgres")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"objectStorage.endpoint"),(0,l.kt)("td",{parentName:"tr",align:null},"Object storage endpoint"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"objectStorage.bucket"),(0,l.kt)("td",{parentName:"tr",align:null},"Object storage bucket"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"objectStorage.region"),(0,l.kt)("td",{parentName:"tr",align:null},"Object storage region"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"objectStorage.accessKey"),(0,l.kt)("td",{parentName:"tr",align:null},"Object storage access key"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"objectStorage.secretKey"),(0,l.kt)("td",{parentName:"tr",align:null},"Object storage secret key"),(0,l.kt)("td",{parentName:"tr",align:null},"null")))),(0,l.kt)("h3",{id:"redis-configuration"},"Redis Configuration"),(0,l.kt)("p",null,"You can choose ",(0,l.kt)("inlineCode",{parentName:"p"},"Redis deployed by Helm")," by ",(0,l.kt)("inlineCode",{parentName:"p"},"--set redis.enabled=true")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"External Redis")," by ",(0,l.kt)("inlineCode",{parentName:"p"},"--set externalRedis.enabled=true"),", if both are configured, ",(0,l.kt)("inlineCode",{parentName:"p"},"Redis deployed by Helm")," will be used."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Redis deployed by Helm")," is base on ",(0,l.kt)("a",{parentName:"p",href:"https://artifacthub.io/packages/helm/bitnami/redis/14.3.3#parameters"},"Redis Helm Chart"),", you can see it for more configurations"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"redis.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable redis deployed by helm"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalRedis.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable external redis"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalRedis.host"),(0,l.kt)("td",{parentName:"tr",align:null},"External redis host"),(0,l.kt)("td",{parentName:"tr",align:null},"redis")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalRedis.port"),(0,l.kt)("td",{parentName:"tr",align:null},"External redis port"),(0,l.kt)("td",{parentName:"tr",align:null},"6379")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalRedis.password"),(0,l.kt)("td",{parentName:"tr",align:null},"External redis password"),(0,l.kt)("td",{parentName:"tr",align:null},"null")))),(0,l.kt)("h3",{id:"email-server-configuration"},"Email Server Configuration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email.host"),(0,l.kt)("td",{parentName:"tr",align:null},"Mail server host"),(0,l.kt)("td",{parentName:"tr",align:null},"''")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email.port"),(0,l.kt)("td",{parentName:"tr",align:null},"Mail server port"),(0,l.kt)("td",{parentName:"tr",align:null},"587")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email.username"),(0,l.kt)("td",{parentName:"tr",align:null},"Mail server username"),(0,l.kt)("td",{parentName:"tr",align:null},"''")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email.password"),(0,l.kt)("td",{parentName:"tr",align:null},"Mail server password"),(0,l.kt)("td",{parentName:"tr",align:null},"''")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email.tls"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable TLS"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email.from"),(0,l.kt)("td",{parentName:"tr",align:null},"System mail sender's email address"),(0,l.kt)("td",{parentName:"tr",align:null},"''")))),(0,l.kt)("h3",{id:"system-configuration"},"System Configuration"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"system.web.host")," is required, setting it, to specify the access domain of Tellery service"),(0,l.kt)("p",null,"If your written language is not English, you can modify your search plugin through ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/tellery/tellery"},"this document")," to get a better search experience."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"system.secretKey"),(0,l.kt)("td",{parentName:"tr",align:null},"Secret key for encrypt sensitive information into database"),(0,l.kt)("td",{parentName:"tr",align:null},"pjfJ2Cbe3sv0Gtz32Krr4A")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"system.search.language"),(0,l.kt)("td",{parentName:"tr",align:null},"Language for full-text search"),(0,l.kt)("td",{parentName:"tr",align:null},"en")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"system.search.plugin"),(0,l.kt)("td",{parentName:"tr",align:null},"Pixel plug-in for full-text search"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"system.web.port"),(0,l.kt)("td",{parentName:"tr",align:null},"Web server port"),(0,l.kt)("td",{parentName:"tr",align:null},"80")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"system.web.protocol"),(0,l.kt)("td",{parentName:"tr",align:null},"Web server protocol"),(0,l.kt)("td",{parentName:"tr",align:null},"https")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"system.web.host"),(0,l.kt)("td",{parentName:"tr",align:null},"Web server host"),(0,l.kt)("td",{parentName:"tr",align:null},"null")))),(0,l.kt)("h3",{id:"initialization-configuration"},"Initialization Configuration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"init.user.create"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to create first user"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"init.user.name"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of created user"),(0,l.kt)("td",{parentName:"tr",align:null},"admin")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"init.user.email"),(0,l.kt)("td",{parentName:"tr",align:null},"Email of created user"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:admin@tellery.local"},"admin@tellery.local"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"init.user.password"),(0,l.kt)("td",{parentName:"tr",align:null},"Password of created user"),(0,l.kt)("td",{parentName:"tr",align:null},"admin")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"init.workspace.create"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to create first workspace"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"init.workspace.name"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of created workspace"),(0,l.kt)("td",{parentName:"tr",align:null},"Default")))),(0,l.kt)("h3",{id:"basic-configuration"},"Basic Configuration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ingress.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable ingress controller resource"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ingress.annotations"),(0,l.kt)("td",{parentName:"tr",align:null},"Ingress annotations configuration"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ingress.hostname"),(0,l.kt)("td",{parentName:"tr",align:null},"Ingress resource hostname"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ingress.tls"),(0,l.kt)("td",{parentName:"tr",align:null},"Ingress TLS configuration"),(0,l.kt)("td",{parentName:"tr",align:null},"null")))),(0,l.kt)("h3",{id:"server-configuration"},"Server Configuration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images.server.repository"),(0,l.kt)("td",{parentName:"tr",align:null},"Container image repository"),(0,l.kt)("td",{parentName:"tr",align:null},"tellery/server")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images.server.tag"),(0,l.kt)("td",{parentName:"tr",align:null},"Container image tag"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images.server.pullPolicy"),(0,l.kt)("td",{parentName:"tr",align:null},"Container image pullPolicy"),(0,l.kt)("td",{parentName:"tr",align:null},"IfNotPresent")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images.server.imagePullSecrets"),(0,l.kt)("td",{parentName:"tr",align:null},"Container image image pull secrets"),(0,l.kt)("td",{parentName:"tr",align:null},"[]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.replicas"),(0,l.kt)("td",{parentName:"tr",align:null},"desired number of pods"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.probeInitialDelaySeconds"),(0,l.kt)("td",{parentName:"tr",align:null},"Delay before liveness probe is initiated"),(0,l.kt)("td",{parentName:"tr",align:null},"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.resources"),(0,l.kt)("td",{parentName:"tr",align:null},"Container resource requests and limits"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.affinity"),(0,l.kt)("td",{parentName:"tr",align:null},"Affinity settings for pod assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.nodeSelector"),(0,l.kt)("td",{parentName:"tr",align:null},"Node labels for pod assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.tolerations"),(0,l.kt)("td",{parentName:"tr",align:null},"Toleration labels for pod assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.podLabels"),(0,l.kt)("td",{parentName:"tr",align:null},"Ingress labels configuration"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.autoscaling.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable auto scaling"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.autoscaling.minReplicas"),(0,l.kt)("td",{parentName:"tr",align:null},"Minimum number of pods"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.autoscaling.maxReplicas"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum number of pods"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.autoscaling.targetCPUUtilizationPercentage"),(0,l.kt)("td",{parentName:"tr",align:null},"Define the CPU trigger value of the expansion"),(0,l.kt)("td",{parentName:"tr",align:null},"50")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.service.name"),(0,l.kt)("td",{parentName:"tr",align:null},"Server's port name defined in Service"),(0,l.kt)("td",{parentName:"tr",align:null},"http")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.service.type"),(0,l.kt)("td",{parentName:"tr",align:null},"Service Type"),(0,l.kt)("td",{parentName:"tr",align:null},"ClusterIP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.service.externalPort"),(0,l.kt)("td",{parentName:"tr",align:null},"Service port"),(0,l.kt)("td",{parentName:"tr",align:null},"8000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.service.annotations"),(0,l.kt)("td",{parentName:"tr",align:null},"Annotations for service assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.service.externalIPs"),(0,l.kt)("td",{parentName:"tr",align:null},"ExternalIPs for service assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"server.service.loadBalancerSourceRanges"),(0,l.kt)("td",{parentName:"tr",align:null},"LoadBalancerSourceRanges for service assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"null")))),(0,l.kt)("h3",{id:"connector-configuration"},"Connector Configuration"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images.connector.repository"),(0,l.kt)("td",{parentName:"tr",align:null},"Container image repository"),(0,l.kt)("td",{parentName:"tr",align:null},"tellery/connector")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images.connector.tag"),(0,l.kt)("td",{parentName:"tr",align:null},"Container image tag"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images.connector.pullPolicy"),(0,l.kt)("td",{parentName:"tr",align:null},"Container image pullPolicy"),(0,l.kt)("td",{parentName:"tr",align:null},"IfNotPresent")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"images.connector.imagePullSecrets"),(0,l.kt)("td",{parentName:"tr",align:null},"Container image image pull secrets"),(0,l.kt)("td",{parentName:"tr",align:null},"[]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.probeInitialDelaySeconds"),(0,l.kt)("td",{parentName:"tr",align:null},"Delay before liveness probe is initiated"),(0,l.kt)("td",{parentName:"tr",align:null},"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.resources"),(0,l.kt)("td",{parentName:"tr",align:null},"Container resource requests and limits"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.affinity"),(0,l.kt)("td",{parentName:"tr",align:null},"Affinity settings for pod assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.nodeSelector"),(0,l.kt)("td",{parentName:"tr",align:null},"Node labels for pod assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.tolerations"),(0,l.kt)("td",{parentName:"tr",align:null},"Toleration labels for pod assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.podLabels"),(0,l.kt)("td",{parentName:"tr",align:null},"Ingress labels configuration"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.autoscaling.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable auto scaling"),(0,l.kt)("td",{parentName:"tr",align:null},"false")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.autoscaling.minReplicas"),(0,l.kt)("td",{parentName:"tr",align:null},"Minimum number of pods"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.autoscaling.maxReplicas"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum number of pods"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.autoscaling.targetCPUUtilizationPercentage"),(0,l.kt)("td",{parentName:"tr",align:null},"Define the CPU trigger value of the expansion"),(0,l.kt)("td",{parentName:"tr",align:null},"50")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.service.name"),(0,l.kt)("td",{parentName:"tr",align:null},"Server's port name defined in Service"),(0,l.kt)("td",{parentName:"tr",align:null},"http")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.service.type"),(0,l.kt)("td",{parentName:"tr",align:null},"Service Type"),(0,l.kt)("td",{parentName:"tr",align:null},"ClusterIP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.service.externalPort"),(0,l.kt)("td",{parentName:"tr",align:null},"Service port"),(0,l.kt)("td",{parentName:"tr",align:null},"50051")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.service.annotations"),(0,l.kt)("td",{parentName:"tr",align:null},"Annotations for service assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"{}")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.service.externalIPs"),(0,l.kt)("td",{parentName:"tr",align:null},"ExternalIPs for service assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.service.loadBalancerSourceRanges"),(0,l.kt)("td",{parentName:"tr",align:null},"LoadBalancerSourceRanges for service assignment"),(0,l.kt)("td",{parentName:"tr",align:null},"null")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.persistence.enabled"),(0,l.kt)("td",{parentName:"tr",align:null},"Persistence volume for storing configurations"),(0,l.kt)("td",{parentName:"tr",align:null},"true")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connector.persistence.size"),(0,l.kt)("td",{parentName:"tr",align:null},"Size of Persistence volume"),(0,l.kt)("td",{parentName:"tr",align:null},"1Gi")))),(0,l.kt)("p",null,"Using the ",(0,l.kt)("inlineCode",{parentName:"p"},"--set key\\value[,key=value]")," argument to specify each parameter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm install tellery tellery-stable/tellery --set system.secretKey=xxx --set web.replicas=2\n")),(0,l.kt)("p",null,"Or using the yaml to specify each parameter"),(0,l.kt)("p",null,"Copy these ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/tellery/tellery/blob/master/deploy/helm/values.yaml"},"default configuration")," into a new file named tellery-config.yaml, then modify as your need."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm install tellery tellery-stable/tellery -f tellery-config.yaml\n")))}m.isMDXComponent=!0}}]);